@using NeverNeverLand.Models.ViewModels
@model AdminPricingViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Pricing Admin";
}

<h2 class="mb-3 text-white">Pricing Admin</h2>

<!-- Filters -->
<div class="card mb-4">
    <div class="card-header">Filters</div>
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-3">
                <label class="form-label">Season</label>
                <select name="seasonId" class="form-select">
                    <option value="">All seasons</option>
                    @foreach (var s in Model.SeasonOptions)
                    {
                        var selected = Model.FilterSeasonId.HasValue && s.Value == Model.FilterSeasonId.Value.ToString();
                        <option value="@s.Value" selected="@(selected)">@s.Text</option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Kind</label>
                <select name="kind" class="form-select">
                    <option value="All" selected="@(Model.FilterKind == "All")">All</option>
                    <option value="Ticket" selected="@(Model.FilterKind == "Ticket")">Ticket</option>
                    <option value="Pass" selected="@(Model.FilterKind == "Pass")">Pass</option>
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">Item</label>
                <select name="item" class="form-select">
                    <option value="">All</option>
                    @foreach (var o in Model.AdmissionTypeOptions)
                    {
                        var sel = o.Value == Model.FilterItem;
                        <option value="@o.Value" selected="@(sel)">@o.Text</option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Search</label>
                <input name="q" value="@Model.Q" class="form-control" placeholder="Item or season..." />
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <div class="form-check me-3">
                    <input class="form-check-input" type="checkbox" id="inactive" name="includeInactive" value="true" @(Model.IncludeInactive ? "checked" : "") />
                    <label for="inactive" class="form-check-label">Include inactive</label>
                </div>
                <button class="btn btn-outline-secondary ms-auto" type="submit">Apply</button>
            </div>
        </form>
    </div>
</div>

<!-- Create / Update -->
<div class="card mb-4">
    <div class="card-header">Create / Update Price</div>
    <div class="card-body">
        <form asp-action="CreatePrice" method="post" class="row g-3">
            <div class="col-md-3">
                <label asp-for="SelectedSeasonId" class="form-label">Season</label>
                <select asp-for="SelectedSeasonId" asp-items="Model.SeasonOptions" class="form-select"></select>
                <span asp-validation-for="SelectedSeasonId" class="text-danger"></span>
            </div>
            <div class="col-md-2">
                <label asp-for="SelectedKind" class="form-label">Kind</label>
                <select asp-for="SelectedKind" asp-items="Model.KindOptions" class="form-select"
                        onchange="this.form.submit()"></select>
                <small class="text-muted">Changing kind reloads items.</small>
            </div>
            <div class="col-md-3">
                <label asp-for="SelectedAdmissionType" class="form-label">Item</label>
                <select asp-for="SelectedAdmissionType" asp-items="Model.AdmissionTypeOptions" class="form-select"></select>
                <span asp-validation-for="SelectedAdmissionType" class="text-danger"></span>
            </div>
            <div class="col-md-2">
                <label asp-for="Amount" class="form-label">Amount</label>
                <input asp-for="Amount" class="form-control" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            <div class="col-md-2">
                <label asp-for="Currency" class="form-label">Currency</label>
                <input asp-for="Currency" class="form-control" />
            </div>
            <div class="col-12 d-flex">
                <button class="btn btn-primary ms-auto" type="submit">Save</button>
            </div>
        </form>
        <small class="text-muted d-block mt-2">
            Saving will deactivate any existing active price for the selected (Season, Kind, Item) and create a new one.
        </small>
    </div>
</div>

<!-- Prices -->
<div class="card">
    <div class="card-header">Prices</div>
    <div class="card-body p-0">
        <table class="table table-striped table-hover mb-0">
            <thead>
                <tr>
                    <th>Season</th>
                    <th>Kind</th>
                    <th>Item</th>
                    <th class="text-end">Amount</th>
                    <th>Currency</th>
                    <th>Effective Start</th>
                    <th>Effective End</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var p in Model.Prices)
                {
                    <tr>
                        <td>@p.Season?.Name</td>
                        <td>
                            <span class="badge @(p.Kind == "Pass" ? "bg-info" : "bg-secondary")">
                                @p.Kind
                            </span>
                        </td>
                        <td>@p.Item</td>
                        <td class="text-end">@p.Amount.ToString("0.00")</td>
                        <td>@p.Currency</td>
                        <td>@(p.EffectiveStartUtc?.ToLocalTime().ToString("MMM d, yyyy h:mm tt") ?? "-")</td>
                        <td>@(p.EffectiveEndUtc?.ToLocalTime().ToString("MMM d, yyyy h:mm tt") ?? "-")</td>
                        <td>
                            @if (p.IsActive)
                            {
                                <span class="badge bg-success">Active</span>
                            }
                            else
                            {

                                <span class="badge bg-light text-muted">Inactive</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
